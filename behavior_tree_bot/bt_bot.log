INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Offensive Strategy
| | Check: have_largest_fleet
| | Action: attack_fun
| Sequence: Defensive Strategy
| | Check: is_being_attacked
| | Action: defend_planet
| Sequence: Neutral Strategy
| | Check: neut_attacked
| | Action: neut_overtake
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Action: spread_time

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 20 56.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 5 23.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 17 5.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 11 13.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 12 13.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 18 5.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 6 23.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:1 18 3.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 12 33.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:18 6 17.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 0 38.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:12 38.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:12 5 48.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 20 22.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:12 19 56.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 6 42.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:1 6 13.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:0 14 60.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:12 11 47.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:1 36.0 75.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:12 0 14.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:1 41.0 75.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:1 46.0 75.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:12 0 14.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:1 51.0 75.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:6 67.0 80.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:6 68.0 80.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Order:1 22 59.0
DEBUG:root:Result: Action: spread_time -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:6 69.0 80.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:6 5 80.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:19 12 56.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:0 20 26.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:1 27.0 34.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:12 42.0 44.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:1 32.0 36.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:12 19 44.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 0 36.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:11 36.0 40.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:11 14 35.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 11 20.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 11 14.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:1 19 11.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:1 19 11.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:0 22 75.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:19 20 16.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:19 21 29.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 14 43.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:19 18 35.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 19 7.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 19 2.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:22 17 61.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:5 22 52.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 21 35.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:22 5 15.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:17 18 18.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 17 15.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:21 17 15.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Order:1 18 16.0
DEBUG:root:Result: Action: neut_overtake -> Success
DEBUG:root:Result: Sequence: Neutral Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 1 26.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:5 1 11.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:21 13 44.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:18 1 22.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 14 34.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:18 21.0 38.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 1 10.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:18 23.0 41.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:18 11.0 26.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 13 15.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:18 13.0 29.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:14 18 8.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:1 38.0 39.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 22 42.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 9.0 32.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 12.0 35.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 15.0 38.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 18.0 41.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 21.0 24.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:22 24.0 25.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Order:22 20 26.0
DEBUG:root:Result: Action: attack_fun -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:13 1 26.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 13 19.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Bad order:1 6.0 20.0
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:22 1 9.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_time
DEBUG:root:Result: Action: spread_time -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:1 20 43.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:20 1 2.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Order:20 1 1.0
DEBUG:root:Result: Action: defend_planet -> Success
DEBUG:root:Result: Sequence: Defensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Success
DEBUG:root:Executing:Action: neut_overtake
DEBUG:root:Result: Action: neut_overtake -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 31.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 32.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 33.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 34.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 35.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 36.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 37.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 38.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 39.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 40.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 41.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 42.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 43.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 44.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_fun
DEBUG:root:Result: Action: attack_fun -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Defensive Strategy
DEBUG:root:Executing:Check: is_being_attacked
DEBUG:root:Result: Check: is_being_attacked -> Success
DEBUG:root:Executing:Action: defend_planet
DEBUG:root:Bad order:20 45.0 48.0
DEBUG:root:Result: Action: defend_planet -> Failure
DEBUG:root:Result: Sequence: Defensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Neutral Strategy
DEBUG:root:Executing:Check: neut_attacked
DEBUG:root:Result: Check: neut_attacked -> Failure
DEBUG:root:Result: Sequence: Neutral Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

